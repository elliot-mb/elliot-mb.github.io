{"ast":null,"code":"var _jsxFileName = \"/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.4/src/components/List.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction makeLIs(root, lis) {\n  let elements = [];\n  lis.forEach((li, i) => {\n    elements.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `${root}/${li.name}`,\n        children: li.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this));\n  });\n  return elements;\n}\n\nexport function LinkList(_ref) {\n  let {\n    root,\n    lis\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: makeLIs(root, lis)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = LinkList;\nexport const Test = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"p\", {\n    children: \"shitter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Test;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinkList\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"names":["React","BrowserRouter","Router","Link","makeLIs","root","lis","elements","forEach","li","i","push","name","LinkList","Test"],"sources":["/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.4/src/components/List.js"],"sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\"; \n\nfunction makeLIs(root, lis) {\n  let elements = [];\n  lis.forEach((li, i) => {\n    elements.push(\n      <li key={i}>\n      <Link to={`${root}/${li.name}`}>{li.name}</Link>\n      </li>\n    );\n  });\n  return elements;\n}\n\nexport function LinkList ({root, lis}) {\n  <>\n    <ul>\n      {makeLIs(root, lis)}\n    </ul>\n  </>\n}\n\nexport const Test = () => {\n  <p>shitter</p>\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,IAFF,QAGO,kBAHP;;;;AAKA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4B;EAC1B,IAAIC,QAAQ,GAAG,EAAf;EACAD,GAAG,CAACE,OAAJ,CAAY,CAACC,EAAD,EAAKC,CAAL,KAAW;IACrBH,QAAQ,CAACI,IAAT,eACE;MAAA,uBACA,QAAC,IAAD;QAAM,EAAE,EAAG,GAAEN,IAAK,IAAGI,EAAE,CAACG,IAAK,EAA7B;QAAA,UAAiCH,EAAE,CAACG;MAApC;QAAA;QAAA;QAAA;MAAA;IADA,GAASF,CAAT;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND;EAOA,OAAOH,QAAP;AACD;;AAED,OAAO,SAASM,QAAT,OAAgC;EAAA,IAAb;IAACR,IAAD;IAAOC;EAAP,CAAa;;EACrC;EAAA;IAAA,uBACE;MAAA,UACGF,OAAO,CAACC,IAAD,EAAOC,GAAP;IADV;MAAA;MAAA;MAAA;IAAA;EADF;AAKD;KANeO,Q;AAQhB,OAAO,MAAMC,IAAI,GAAG,MAAM;EACxB;EAAA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AACD,CAFM;MAAMA,I"},"metadata":{},"sourceType":"module"}