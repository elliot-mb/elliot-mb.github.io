{"ast":null,"code":"var _jsxFileName = \"/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.3/src/pages/GitProject/GitProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./GitProject.css\";\nimport { Navigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { gitProjects } from \"../../data/projects.js\";\nimport { GitResource } from \"../../components/GitResource.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GitProject() {\n  _s();\n\n  //state \n  const [readmeShown, setShown] = useState(false);\n  useEffect(() => {\n    //cant be called after the return as react hooks are tempermental\n    document.title = `${projectClass} | Elliot Buckingham`;\n  });\n  const {\n    projectClass\n  } = useParams();\n  let projectID = -1;\n\n  if (!gitProjects.reduce((x, y) => {\n    if (!x) {\n      projectID++;\n    }\n\n    return x || y.name === projectClass;\n  }, false)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/not-found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  const project = gitProjects[projectID]; //const response = gitResource(project.url);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    id: \"git-project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: projectClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.tagline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-box\",\n      id: `shown-${readmeShown}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"readme\",\n        onClick: () => setShown(!readmeShown),\n        children: \"README.md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GitResource, {\n        url: project.url,\n        display: readmeShown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GitProject, \"A5pK9T7uMka9apuaUvXQt4L0kUE=\", false, function () {\n  return [useParams];\n});\n\n_c = GitProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"GitProject\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useParams","gitProjects","GitResource","GitProject","readmeShown","setShown","document","title","projectClass","projectID","reduce","x","y","name","project","tagline","url"],"sources":["/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.3/src/pages/GitProject/GitProject.js"],"sourcesContent":["import React, { \n  useEffect,\n  useState\n } from 'react';\nimport \"./GitProject.css\"\nimport {\n  Navigate\n} from \"react-router-dom\";\n\nimport {useParams} from \"react-router-dom\";\nimport {gitProjects} from \"../../data/projects.js\"\nimport {GitResource} from \"../../components/GitResource.js\";\n\nexport function GitProject() {\n\n  //state \n  const [readmeShown, setShown] = useState(false);\n\n  useEffect(() => { //cant be called after the return as react hooks are tempermental\n    document.title = `${projectClass} | Elliot Buckingham`;\n  });\n\n  const { projectClass } = useParams();\n  let projectID = -1;\n  if(!gitProjects.reduce((x, y) => { \n    if(!x) { projectID++; } \n    return (x || y.name === projectClass);\n  }, false)){\n    return <Navigate to={\"/not-found\"}/>\n  }\n  const project = gitProjects[projectID];\n  //const response = gitResource(project.url);\n  return(\n    <div className=\"content\" id=\"git-project\">\n      <div>\n        <h2>{projectClass}</h2>\n        <p>{project.tagline}</p>\n      </div>\n      <div className=\"markdown-box\" id={`shown-${readmeShown}`}>\n          <button id=\"readme\" onClick={() => setShown(!readmeShown)}>README.md</button>\n          <GitResource url={project.url} display={readmeShown}/>\n      </div>\n    </div> \n  )\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,QAFF,QAGQ,OAHR;AAIA,OAAO,kBAAP;AACA,SACEC,QADF,QAEO,kBAFP;AAIA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,WAAR,QAA0B,iCAA1B;;AAEA,OAAO,SAASC,UAAT,GAAsB;EAAA;;EAE3B;EACA,MAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IAAE;IAChBS,QAAQ,CAACC,KAAT,GAAkB,GAAEC,YAAa,sBAAjC;EACD,CAFQ,CAAT;EAIA,MAAM;IAAEA;EAAF,IAAmBR,SAAS,EAAlC;EACA,IAAIS,SAAS,GAAG,CAAC,CAAjB;;EACA,IAAG,CAACR,WAAW,CAACS,MAAZ,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC/B,IAAG,CAACD,CAAJ,EAAO;MAAEF,SAAS;IAAK;;IACvB,OAAQE,CAAC,IAAIC,CAAC,CAACC,IAAF,KAAWL,YAAxB;EACD,CAHG,EAGD,KAHC,CAAJ,EAGU;IACR,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAE;IAAd;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,MAAMM,OAAO,GAAGb,WAAW,CAACQ,SAAD,CAA3B,CAjB2B,CAkB3B;;EACA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAyB,EAAE,EAAC,aAA5B;IAAA,wBACE;MAAA,wBACE;QAAA,UAAKD;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIM,OAAO,CAACC;MAAZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,cAAf;MAA8B,EAAE,EAAG,SAAQX,WAAY,EAAvD;MAAA,wBACI;QAAQ,EAAE,EAAC,QAAX;QAAoB,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,WAAF,CAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,WAAD;QAAa,GAAG,EAAEU,OAAO,CAACE,GAA1B;QAA+B,OAAO,EAAEZ;MAAxC;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA/BeD,U;UASWH,S;;;KATXG,U"},"metadata":{},"sourceType":"module"}