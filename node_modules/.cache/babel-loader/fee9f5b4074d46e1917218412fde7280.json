{"ast":null,"code":"import ScotlandYard from\"../pages/Projects/images/scotland.png\";import PlaylistPuller from\"../pages/Projects/images/playlist.png\";import RPNParser from\"../pages/Projects/images/rpn.jpg\";import LeetCode from\"../pages/Projects/images/leetcode.png\";import Euler from\"../pages/Projects/images/euler.png\";import GE from\"../pages/Projects/images/matrix.png\";// import the rest of the thumbnails \nexport var gitProjects=[{name:\"Scotland Yard OOP Coursework\",thumb:ScotlandYard,url:\"https://github.com/elliot-mb/scotland-yard\",tagline:\"Developing and creating an AI for the Scotland Yard boardgame.\",content:[]},{name:\"Playlist Puller\",thumb:PlaylistPuller,url:\"https://github.com/elliot-mb/playlist-puller\",tagline:\"Integrating Spotify, Youtube and Invidious' APIs into a Python script to copy playlists from Spotify over to Youtube.\",content:[]//paragraphs of further detail \n},{name:\"RPN Logic Parser\",thumb:RPNParser,url:\"https://github.com/elliot-mb/RPN-logic-parser\",tagline:\"Parses and computes a truth table for logical expressions given in Reverse Polish notation.\",content:[]},{name:\"LeetCode solutions\",thumb:LeetCode,url:\"https://github.com/elliot-mb/leetcodes\",tagline:\"My attempts at LeetCode problems.\",content:[]},{name:\"Project Euler solutions\",thumb:Euler,url:\"https://github.com/elliot-mb/project-euler-solutions\",tagline:\"Programmatic solutions to select Project Euler problems.\",content:[]},{name:\"Gaussian Elimination\",thumb:GE,url:\"https://github.com/elliot-mb/recursive-gaussian\",tagline:\"A recursive algorithm which computes unknowns from a valid Gaussian Elimination matrix.\",content:[]}];export var otherProjects=[{name:\"Example other-project\"}];","map":{"version":3,"names":["ScotlandYard","PlaylistPuller","RPNParser","LeetCode","Euler","GE","gitProjects","name","thumb","url","tagline","content","otherProjects"],"sources":["/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.4/src/data/projects.js"],"sourcesContent":["import ScotlandYard from \"../pages/Projects/images/scotland.png\";\nimport PlaylistPuller from \"../pages/Projects/images/playlist.png\";\nimport RPNParser from \"../pages/Projects/images/rpn.jpg\";\nimport LeetCode from \"../pages/Projects/images/leetcode.png\";\nimport Euler from \"../pages/Projects/images/euler.png\";\nimport GE from \"../pages/Projects/images/matrix.png\";\n// import the rest of the thumbnails \n\nexport const gitProjects = [\n  {\n    name:\"Scotland Yard OOP Coursework\",\n    thumb: ScotlandYard,\n    url:\"https://github.com/elliot-mb/scotland-yard\",\n    tagline:\"Developing and creating an AI for the Scotland Yard boardgame.\",\n    content:[]\n  },\n  {\n    name:\"Playlist Puller\",\n    thumb:PlaylistPuller,\n    url:\"https://github.com/elliot-mb/playlist-puller\",\n    tagline:\"Integrating Spotify, Youtube and Invidious' APIs into a Python script to copy playlists from Spotify over to Youtube.\",\n    content:[] //paragraphs of further detail \n  },\n  {\n    name:\"RPN Logic Parser\",\n    thumb:RPNParser,\n    url:\"https://github.com/elliot-mb/RPN-logic-parser\",\n    tagline:\"Parses and computes a truth table for logical expressions given in Reverse Polish notation.\",\n    content:[]\n  },\n  {\n    name:\"LeetCode solutions\",\n    thumb:LeetCode,\n    url:\"https://github.com/elliot-mb/leetcodes\",\n    tagline:\"My attempts at LeetCode problems.\",\n    content:[]\n  },\n  {\n    name:\"Project Euler solutions\",\n    thumb:Euler,\n    url:\"https://github.com/elliot-mb/project-euler-solutions\",\n    tagline:\"Programmatic solutions to select Project Euler problems.\",\n    content:[]\n  },\n  {\n    name:\"Gaussian Elimination\",\n    thumb:GE,\n    url:\"https://github.com/elliot-mb/recursive-gaussian\",\n    tagline:\"A recursive algorithm which computes unknowns from a valid Gaussian Elimination matrix.\",\n    content:[]\n  }\n];\n\nexport const otherProjects = [\n  {\n    name:\"Example other-project\"\n  }\n];"],"mappings":"AAAA,MAAOA,aAAP,KAAyB,uCAAzB,CACA,MAAOC,eAAP,KAA2B,uCAA3B,CACA,MAAOC,UAAP,KAAsB,kCAAtB,CACA,MAAOC,SAAP,KAAqB,uCAArB,CACA,MAAOC,MAAP,KAAkB,oCAAlB,CACA,MAAOC,GAAP,KAAe,qCAAf,CACA;AAEA,MAAO,IAAMC,YAAW,CAAG,CACzB,CACEC,IAAI,CAAC,8BADP,CAEEC,KAAK,CAAER,YAFT,CAGES,GAAG,CAAC,4CAHN,CAIEC,OAAO,CAAC,gEAJV,CAKEC,OAAO,CAAC,EALV,CADyB,CAQzB,CACEJ,IAAI,CAAC,iBADP,CAEEC,KAAK,CAACP,cAFR,CAGEQ,GAAG,CAAC,8CAHN,CAIEC,OAAO,CAAC,uHAJV,CAKEC,OAAO,CAAC,EAAG;AALb,CARyB,CAezB,CACEJ,IAAI,CAAC,kBADP,CAEEC,KAAK,CAACN,SAFR,CAGEO,GAAG,CAAC,+CAHN,CAIEC,OAAO,CAAC,6FAJV,CAKEC,OAAO,CAAC,EALV,CAfyB,CAsBzB,CACEJ,IAAI,CAAC,oBADP,CAEEC,KAAK,CAACL,QAFR,CAGEM,GAAG,CAAC,wCAHN,CAIEC,OAAO,CAAC,mCAJV,CAKEC,OAAO,CAAC,EALV,CAtByB,CA6BzB,CACEJ,IAAI,CAAC,yBADP,CAEEC,KAAK,CAACJ,KAFR,CAGEK,GAAG,CAAC,sDAHN,CAIEC,OAAO,CAAC,0DAJV,CAKEC,OAAO,CAAC,EALV,CA7ByB,CAoCzB,CACEJ,IAAI,CAAC,sBADP,CAEEC,KAAK,CAACH,EAFR,CAGEI,GAAG,CAAC,iDAHN,CAIEC,OAAO,CAAC,yFAJV,CAKEC,OAAO,CAAC,EALV,CApCyB,CAApB,CA6CP,MAAO,IAAMC,cAAa,CAAG,CAC3B,CACEL,IAAI,CAAC,uBADP,CAD2B,CAAtB"},"metadata":{},"sourceType":"module"}