{"ast":null,"code":"var _jsxFileName = \"/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.2/src/requests/gitResource.js\";\n// export function gitResource(url){\n//   const siteRoot = \"https://github.com\";\n//   const re = new RegExp(siteRoot);\n//   if(!url.match(re)) { \n//     console.error(`Attempting to load ${url}, it was incorrectly formatted.`);\n//     return {\"error\": `bad formatting in url ${url}`}; \n//   }\n//   const apiRoot = \"https://api.github.com\";\n//   const call = `${apiRoot}${url.split(siteRoot)[0]}`;\n//   return fetch(call).then(r => {\n//         if(!r.ok) {\n//           console.error(`Attempting to load ${url}, got status ${r.status}.`);\n//           return {\"error\": `status ${r.status}`};\n//         }\n//         return r.json()\n//       }\n//     );\n// }\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GitResource extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: \"no\",\n      // options: yes, no, error\n      item: null\n    };\n  }\n\n  gitResource(url) {\n    const siteRoot = \"https://github.com\";\n    const re = new RegExp(siteRoot);\n\n    if (!url.match(re)) {\n      const e = `Attempting to load ${url}, it was incorrectly formatted.`;\n      console.error(e);\n      this.setState({\n        loaded: \"error\",\n        errmsg: e\n      });\n    }\n\n    const apiRoot = \"https://api.github.com\";\n    const call = `${apiRoot}${url.split(siteRoot)[0]}`;\n    return fetch(call).then(r => {\n      if (!r.ok) {\n        console.error(`Attempting to load ${url}, got status ${r.status}.`);\n        return {\n          \"error\": `status ${r.status}`\n        };\n      }\n\n      return r.json();\n    });\n  }\n\n  componentDidMount() {\n    //cant be called after the return as react hooks are tempermental\n    this.gitResource(this.props.url);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this); // switch(this.state.loaded){\n    //   case \"no\":\n    //     return( \n    //       <div id=\"content\">\n    //         <p>Fetching from github...</p>\n    //       </div>\n    //     )\n    //   case \"not-found\":\n    //     return( \n    //       <Navigate to=\"/not-found\" />\n    //     )\n    //   case \"error\":\n    //     return(\n    //       <div id=\"content\">\n    //         <h2>An error occured</h2>\n    //         <p>{this.state.errmsg}</p>\n    //       </div>\n    //     )\n    //   default:\n    //     return(\n    //       <div id=\"content\">\n    //         <h2>{this.state.project.name}</h2>\n    //         <p>{this.state.item}</p>\n    //       </div>\n    //     )\n    // }\n  }\n\n}","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Link","GitResource","Component","constructor","props","state","loaded","item","gitResource","url","siteRoot","re","RegExp","match","e","console","error","setState","errmsg","apiRoot","call","split","fetch","then","r","ok","status","json","componentDidMount","render"],"sources":["/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.2/src/requests/gitResource.js"],"sourcesContent":["// export function gitResource(url){\n//   const siteRoot = \"https://github.com\";\n//   const re = new RegExp(siteRoot);\n//   if(!url.match(re)) { \n//     console.error(`Attempting to load ${url}, it was incorrectly formatted.`);\n//     return {\"error\": `bad formatting in url ${url}`}; \n//   }\n//   const apiRoot = \"https://api.github.com\";\n//   const call = `${apiRoot}${url.split(siteRoot)[0]}`;\n//   return fetch(call).then(r => {\n//         if(!r.ok) {\n//           console.error(`Attempting to load ${url}, got status ${r.status}.`);\n//           return {\"error\": `status ${r.status}`};\n//         }\n\n//         return r.json()\n//       }\n//     );\n// }\n\nimport React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\n\nexport class GitResource extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loaded: \"no\", // options: yes, no, error\n      item: null\n    }\n  }\n\n  gitResource(url){\n    const siteRoot = \"https://github.com\";\n    const re = new RegExp(siteRoot);\n    if(!url.match(re)) { \n      const e = `Attempting to load ${url}, it was incorrectly formatted.`\n      console.error(e);\n      this.setState({loaded: \"error\", errmsg: e}); \n    }\n    const apiRoot = \"https://api.github.com\";\n    const call = `${apiRoot}${url.split(siteRoot)[0]}`;\n    return fetch(call).then(r => {\n          if(!r.ok) {\n            console.error(`Attempting to load ${url}, got status ${r.status}.`);\n            return {\"error\": `status ${r.status}`};\n          }\n  \n          return r.json()\n        }\n      );\n  }\n\n  componentDidMount(){ //cant be called after the return as react hooks are tempermental\n    this.gitResource(this.props.url);\n  }\n\n  render(){\n    return(\n      <div>\n        <p>{this.state.item}</p>\n      </div>\n    )\n    // switch(this.state.loaded){\n    //   case \"no\":\n    //     return( \n    //       <div id=\"content\">\n    //         <p>Fetching from github...</p>\n    //       </div>\n    //     )\n    //   case \"not-found\":\n    //     return( \n    //       <Navigate to=\"/not-found\" />\n    //     )\n    //   case \"error\":\n    //     return(\n    //       <div id=\"content\">\n    //         <h2>An error occured</h2>\n    //         <p>{this.state.errmsg}</p>\n    //       </div>\n    //     )\n    //   default:\n    //     return(\n    //       <div id=\"content\">\n    //         <h2>{this.state.project.name}</h2>\n    //         <p>{this.state.item}</p>\n    //       </div>\n    //     )\n    // }\n  }\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,IAFF,QAGO,kBAHP;;AAKA,OAAO,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;EAC/CC,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,MAAM,EAAE,IADG;MACG;MACdC,IAAI,EAAE;IAFK,CAAb;EAID;;EAEDC,WAAW,CAACC,GAAD,EAAK;IACd,MAAMC,QAAQ,GAAG,oBAAjB;IACA,MAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAWF,QAAX,CAAX;;IACA,IAAG,CAACD,GAAG,CAACI,KAAJ,CAAUF,EAAV,CAAJ,EAAmB;MACjB,MAAMG,CAAC,GAAI,sBAAqBL,GAAI,iCAApC;MACAM,OAAO,CAACC,KAAR,CAAcF,CAAd;MACA,KAAKG,QAAL,CAAc;QAACX,MAAM,EAAE,OAAT;QAAkBY,MAAM,EAAEJ;MAA1B,CAAd;IACD;;IACD,MAAMK,OAAO,GAAG,wBAAhB;IACA,MAAMC,IAAI,GAAI,GAAED,OAAQ,GAAEV,GAAG,CAACY,KAAJ,CAAUX,QAAV,EAAoB,CAApB,CAAuB,EAAjD;IACA,OAAOY,KAAK,CAACF,IAAD,CAAL,CAAYG,IAAZ,CAAiBC,CAAC,IAAI;MACvB,IAAG,CAACA,CAAC,CAACC,EAAN,EAAU;QACRV,OAAO,CAACC,KAAR,CAAe,sBAAqBP,GAAI,gBAAee,CAAC,CAACE,MAAO,GAAhE;QACA,OAAO;UAAC,SAAU,UAASF,CAAC,CAACE,MAAO;QAA7B,CAAP;MACD;;MAED,OAAOF,CAAC,CAACG,IAAF,EAAP;IACD,CAPE,CAAP;EASD;;EAEDC,iBAAiB,GAAE;IAAE;IACnB,KAAKpB,WAAL,CAAiB,KAAKJ,KAAL,CAAWK,GAA5B;EACD;;EAEDoB,MAAM,GAAE;IACN,oBACE;MAAA,uBACE;QAAA,UAAI,KAAKxB,KAAL,CAAWE;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,CADM,CAMN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;AAlE8C"},"metadata":{},"sourceType":"module"}