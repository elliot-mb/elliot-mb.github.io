{"ast":null,"code":"var _jsxFileName = \"/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.2/src/pages/Project/Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport \"./Project.css\";\nimport { Navigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { projects } from \"../../data/projects.js\";\nimport { gitResource } from \"../../requests/gitResource.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Project() {\n  _s();\n\n  useEffect(() => {\n    //cant be called after the return as react hooks are tempermental\n    document.title = `${projectClass} | Elliot Buckingham`;\n  });\n  const {\n    projectClass\n  } = useParams();\n  let projectID = 0;\n\n  if (!projects.reduce((x, y) => {\n    if (!x) {\n      projectID++;\n    }\n\n    return x || y.name === projectClass;\n  }, false)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/not-found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  const project = projects[projectID]; //const response = gitResource(project.url);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: projectClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Pulled info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n} // export class Project extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       project: null,\n//       loaded: \"no\", // options: yes, no, error, not-found\n//       item: null\n//     }\n//   }\n//   gitResource(url){\n//     const siteRoot = \"https://github.com\";\n//     const re = new RegExp(siteRoot);\n//     if(!url.match(re)) { \n//       console.error(`Attempting to load ${url}, it was incorrectly formatted.`);\n//       return {\"error\": `bad formatting in url ${url}`}; \n//     }\n//     const apiRoot = \"https://api.github.com\";\n//     const call = `${apiRoot}${url.split(siteRoot)[0]}`;\n//     return fetch(call).then(r => {\n//           if(!r.ok) {\n//             console.error(`Attempting to load ${url}, got status ${r.status}.`);\n//             return {\"error\": `status ${r.status}`};\n//           }\n//           return r.json()\n//         }\n//       );\n//   }\n//   componentDidMount(){ //cant be called after the return as react hooks are tempermental\n//     // const { projectClass } = this.hook;\n//     // let projectID = 0;\n//     // if(!projects.reduce((x, y) => { \n//     //   if(!x) { projectID++; } \n//     //   return (x || y.name === projectClass);\n//     // }, false)) { this.setState({\n//     //     project: null, \n//     //     loaded: \"not-found\",\n//     //     item: null\n//     // })}else{\n//     //   this.setState({\n//     //     project: projects[projectID],\n//     //     loaded: \"no\",\n//     //     item: null\n//     //   });\n//     // }\n//     document.title = `${\"benji croll\"} | Elliot Buckingham`;\n//   }\n//   render(){\n//     return(\n//       <div id=\"content\">\n//         <h2>{this.props.match.params.projectClass}</h2>\n//         <p>hi</p>\n//       </div>\n//     )\n//     // switch(this.state.loaded){\n//     //   case \"no\":\n//     //     return( \n//     //       <div id=\"content\">\n//     //         <p>Fetching from github...</p>\n//     //       </div>\n//     //     )\n//     //   case \"not-found\":\n//     //     return( \n//     //       <Navigate to=\"/not-found\" />\n//     //     )\n//     //   case \"error\":\n//     //     return(\n//     //       <div id=\"content\">\n//     //         <h2>An error occured</h2>\n//     //         <p>{this.state.errmsg}</p>\n//     //       </div>\n//     //     )\n//     //   default:\n//     //     return(\n//     //       <div id=\"content\">\n//     //         <h2>{this.state.project.name}</h2>\n//     //         <p>{this.state.item}</p>\n//     //       </div>\n//     //     )\n//     // }\n//   }\n// }\n\n_s(Project, \"x++9aDuyqJowqTFacVwTsmDDVMM=\", false, function () {\n  return [useParams];\n});\n\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useEffect","Navigate","useParams","projects","gitResource","Project","document","title","projectClass","projectID","reduce","x","y","name","project"],"sources":["/home/elliot/Documents/computer-science/personal-projects/web/frameworks/React/personal-webpage/v0.2/src/pages/Project/Project.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport \"./Project.css\"\nimport {\n  Navigate\n} from \"react-router-dom\";\n\nimport {useParams} from \"react-router-dom\";\nimport {projects} from \"../../data/projects.js\"\nimport {gitResource} from \"../../requests/gitResource.js\";\n\nexport function Project() {\n\n  useEffect(() => { //cant be called after the return as react hooks are tempermental\n    document.title = `${projectClass} | Elliot Buckingham`;\n  });\n\n  const { projectClass } = useParams();\n  let projectID = 0;\n  if(!projects.reduce((x, y) => { \n    if(!x) { projectID++; } \n    return (x || y.name === projectClass);\n  }, false)){\n    return <Navigate to={\"/not-found\"}/>\n  }\n  const project = projects[projectID];\n  //const response = gitResource(project.url);\n  return(\n    <div id=\"content\">\n      <h2>{projectClass}</h2>\n      <p>Pulled info</p>\n    </div>\n  )\n}\n\n// export class Project extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       project: null,\n//       loaded: \"no\", // options: yes, no, error, not-found\n//       item: null\n//     }\n//   }\n\n//   gitResource(url){\n//     const siteRoot = \"https://github.com\";\n//     const re = new RegExp(siteRoot);\n//     if(!url.match(re)) { \n//       console.error(`Attempting to load ${url}, it was incorrectly formatted.`);\n//       return {\"error\": `bad formatting in url ${url}`}; \n//     }\n//     const apiRoot = \"https://api.github.com\";\n//     const call = `${apiRoot}${url.split(siteRoot)[0]}`;\n//     return fetch(call).then(r => {\n//           if(!r.ok) {\n//             console.error(`Attempting to load ${url}, got status ${r.status}.`);\n//             return {\"error\": `status ${r.status}`};\n//           }\n  \n//           return r.json()\n//         }\n//       );\n//   }\n\n//   componentDidMount(){ //cant be called after the return as react hooks are tempermental\n//     // const { projectClass } = this.hook;\n//     // let projectID = 0;\n//     // if(!projects.reduce((x, y) => { \n//     //   if(!x) { projectID++; } \n//     //   return (x || y.name === projectClass);\n//     // }, false)) { this.setState({\n//     //     project: null, \n//     //     loaded: \"not-found\",\n//     //     item: null\n//     // })}else{\n//     //   this.setState({\n//     //     project: projects[projectID],\n//     //     loaded: \"no\",\n//     //     item: null\n//     //   });\n//     // }\n    \n//     document.title = `${\"benji croll\"} | Elliot Buckingham`;\n//   }\n\n//   render(){\n//     return(\n//       <div id=\"content\">\n//         <h2>{this.props.match.params.projectClass}</h2>\n//         <p>hi</p>\n//       </div>\n//     )\n//     // switch(this.state.loaded){\n//     //   case \"no\":\n//     //     return( \n//     //       <div id=\"content\">\n//     //         <p>Fetching from github...</p>\n//     //       </div>\n//     //     )\n//     //   case \"not-found\":\n//     //     return( \n//     //       <Navigate to=\"/not-found\" />\n//     //     )\n//     //   case \"error\":\n//     //     return(\n//     //       <div id=\"content\">\n//     //         <h2>An error occured</h2>\n//     //         <p>{this.state.errmsg}</p>\n//     //       </div>\n//     //     )\n//     //   default:\n//     //     return(\n//     //       <div id=\"content\">\n//     //         <h2>{this.state.project.name}</h2>\n//     //         <p>{this.state.item}</p>\n//     //       </div>\n//     //     )\n//     // }\n//   }\n// }"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SACEC,QADF,QAEO,kBAFP;AAIA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;;AAEA,OAAO,SAASC,OAAT,GAAmB;EAAA;;EAExBL,SAAS,CAAC,MAAM;IAAE;IAChBM,QAAQ,CAACC,KAAT,GAAkB,GAAEC,YAAa,sBAAjC;EACD,CAFQ,CAAT;EAIA,MAAM;IAAEA;EAAF,IAAmBN,SAAS,EAAlC;EACA,IAAIO,SAAS,GAAG,CAAhB;;EACA,IAAG,CAACN,QAAQ,CAACO,MAAT,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC5B,IAAG,CAACD,CAAJ,EAAO;MAAEF,SAAS;IAAK;;IACvB,OAAQE,CAAC,IAAIC,CAAC,CAACC,IAAF,KAAWL,YAAxB;EACD,CAHG,EAGD,KAHC,CAAJ,EAGU;IACR,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAE;IAAd;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,MAAMM,OAAO,GAAGX,QAAQ,CAACM,SAAD,CAAxB,CAdwB,CAexB;;EACA,oBACE;IAAK,EAAE,EAAC,SAAR;IAAA,wBACE;MAAA,UAAKD;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7GgBH,O;UAMWH,S;;;KANXG,O"},"metadata":{},"sourceType":"module"}